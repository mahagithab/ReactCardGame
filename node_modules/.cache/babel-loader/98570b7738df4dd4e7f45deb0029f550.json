{"ast":null,"code":"var _jsxFileName = \"/home/marhabat/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/lightcode/ReactCardGame/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Card from './components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  src: '/img/helmet-1.png',\n  isMatched: false\n}, {\n  src: '/img/potion-1.png',\n  isMatched: false\n}, {\n  src: '/img/ring-1.png',\n  isMatched: false\n}, {\n  src: '/img/scroll-1.png',\n  isMatched: false\n}, {\n  src: '/img/shield-1.png',\n  isMatched: false\n}, {\n  src: '/img/sword-1.png',\n  isMatched: false\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(0);\n  };\n\n  const handleChoice = card => {\n    if (choiceOne) {\n      setChoiceTwo(card);\n    } else {\n      setChoiceOne(card);\n    }\n  };\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prev => prev + 1);\n    setDisabled(false);\n\n    if (turns >= 10) {\n      shuffleCards();\n    }\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prev => prev.map(card => {\n          if (choiceOne.src === card.src) {\n            return { ...card,\n              isMatched: true\n            };\n          }\n\n          return card;\n        }));\n        setTimeout(resetTurn, 1000);\n      } else {\n        setTimeout(resetTurn, 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your turns \", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        isFlipped: card === choiceOne || card === choiceTwo || card.isMatched,\n        handleChoice: handleChoice,\n        card: card,\n        disabled: disabled,\n        choiceOne: choiceOne\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zpj1OC3lPd52QG2dCYHCz30icbw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marhabat/Рабочий стол/lightcode/ReactCardGame/src/App.js"],"names":["useEffect","useState","Card","cardImages","src","isMatched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","resetTurn","prev","setTimeout"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css'\nimport Card from './components/Card';\n\nconst cardImages = [\n  {\n    src:'/img/helmet-1.png',\n    isMatched:false\n  },\n  {\n    src:'/img/potion-1.png',\n    isMatched:false\n  },\n  {\n    src:'/img/ring-1.png',\n    isMatched:false\n  },\n  {\n    src:'/img/scroll-1.png',\n    isMatched:false\n  },\n  {\n    src:'/img/shield-1.png',\n    isMatched:false\n  },\n  {\n    src:'/img/sword-1.png',\n    isMatched:false\n  }\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages,...cardImages]\n    .sort(() => Math.random() - 0.5)\n    .map((card) => ({...card, id: Math.random() }))\n\n    setCards(shuffledCards)\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(0)\n  }\n\n  const handleChoice = (card) => {\n    if (choiceOne) {\n      setChoiceTwo(card)\n    }\n    else{\n      setChoiceOne(card)\n    }\n  }\n\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prev => prev + 1)\n    setDisabled(false)\n    if(turns >= 10) {\n      shuffleCards()\n    }\n  } \n\n  useEffect(() => {\n    if(choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prev) => prev.map((card) => {\n          if(choiceOne.src === card.src) {\n            return {...card, isMatched: true}\n          }\n          return card\n        }))\n        setTimeout(resetTurn,1000)\n      } else {\n        setTimeout(resetTurn,1000)\n      }\n    }\n  },[choiceOne, choiceTwo])\n\n  useEffect(() => {\n    shuffleCards()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <p>Your turns {turns}</p>\n      <div className='card-grid'>\n        {cards.map((card) =>\n        <Card isFlipped={card === choiceOne || card === choiceTwo || card.isMatched}\n        handleChoice={handleChoice} \n        key={card.id} \n        card={card}\n        disabled={disabled}\n        choiceOne={choiceOne} \n        />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}